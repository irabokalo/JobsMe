// <auto-generated />
using System;
using JobsMe.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Metadata.Internal;
using Microsoft.EntityFrameworkCore.Migrations;

namespace JobsMe.DAL.Migrations
{
    [DbContext(typeof(JobsDbContext))]
    [Migration("20180505192413_RabotaUaId")]
    partial class RabotaUaId
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-preview2-30571")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("JobsMe.DAL.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("JobsMe.DAL.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("JobsMe.DAL.Models.Level", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Levels");
                });

            modelBuilder.Entity("JobsMe.DAL.Models.Offer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Offers");
                });

            modelBuilder.Entity("JobsMe.DAL.Models.Responsibility", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Responsibilities");
                });

            modelBuilder.Entity("JobsMe.DAL.Models.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("KeyWords");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("JobsMe.DAL.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("Login");

                    b.Property<string>("Password");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("JobsMe.DAL.Models.UserSkill", b =>
                {
                    b.Property<int>("UserId");

                    b.Property<int>("SkillId");

                    b.HasKey("UserId", "SkillId");

                    b.HasIndex("SkillId");

                    b.ToTable("UserSkill");
                });

            modelBuilder.Entity("JobsMe.DAL.Models.Vacancy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("AddDate");

                    b.Property<int?>("CategoryId");

                    b.Property<string>("CityName");

                    b.Property<int>("CompanyId");

                    b.Property<string>("EnglishLevel");

                    b.Property<string>("Experience");

                    b.Property<bool>("Hot");

                    b.Property<int?>("LevelId");

                    b.Property<string>("Name");

                    b.Property<int>("RabotaUaId");

                    b.Property<double>("Salary");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("LevelId");

                    b.ToTable("Vacancies");
                });

            modelBuilder.Entity("JobsMe.DAL.Models.VacancyOffer", b =>
                {
                    b.Property<int>("VacancyId");

                    b.Property<int>("OfferId");

                    b.HasKey("VacancyId", "OfferId");

                    b.HasIndex("OfferId");

                    b.ToTable("VacancyOffer");
                });

            modelBuilder.Entity("JobsMe.DAL.Models.VacancyResponsibility", b =>
                {
                    b.Property<int>("VacancyId");

                    b.Property<int>("ResponsibilityId");

                    b.HasKey("VacancyId", "ResponsibilityId");

                    b.HasIndex("ResponsibilityId");

                    b.ToTable("VacancyResponsibility");
                });

            modelBuilder.Entity("JobsMe.DAL.Models.VacancySkill", b =>
                {
                    b.Property<int>("VacancyId");

                    b.Property<int>("SkillId");

                    b.HasKey("VacancyId", "SkillId");

                    b.HasIndex("SkillId");

                    b.ToTable("VacancySkill");
                });

            modelBuilder.Entity("JobsMe.DAL.Models.UserSkill", b =>
                {
                    b.HasOne("JobsMe.DAL.Models.Skill", "Skill")
                        .WithMany("UserSkills")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("JobsMe.DAL.Models.User", "User")
                        .WithMany("UserSkills")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("JobsMe.DAL.Models.Vacancy", b =>
                {
                    b.HasOne("JobsMe.DAL.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");

                    b.HasOne("JobsMe.DAL.Models.Company", "Company")
                        .WithMany("Vacancies")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("JobsMe.DAL.Models.Level", "Level")
                        .WithMany()
                        .HasForeignKey("LevelId");
                });

            modelBuilder.Entity("JobsMe.DAL.Models.VacancyOffer", b =>
                {
                    b.HasOne("JobsMe.DAL.Models.Offer", "Offer")
                        .WithMany("VacancyOffers")
                        .HasForeignKey("OfferId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("JobsMe.DAL.Models.Vacancy", "Vacancy")
                        .WithMany("VacancyOffers")
                        .HasForeignKey("VacancyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("JobsMe.DAL.Models.VacancyResponsibility", b =>
                {
                    b.HasOne("JobsMe.DAL.Models.Responsibility", "Responsibility")
                        .WithMany("VacancyResponsibilities")
                        .HasForeignKey("ResponsibilityId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("JobsMe.DAL.Models.Vacancy", "Vacancy")
                        .WithMany("VacancyResponsibilities")
                        .HasForeignKey("VacancyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("JobsMe.DAL.Models.VacancySkill", b =>
                {
                    b.HasOne("JobsMe.DAL.Models.Skill", "Skill")
                        .WithMany("VacancySkills")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("JobsMe.DAL.Models.Vacancy", "Vacancy")
                        .WithMany("VacancySkills")
                        .HasForeignKey("VacancyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
